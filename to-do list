VallisMOO to-do list- abstract visual @ aural interactions  (allow for invisibility and translucency)    - General player status checks    - Room look message checks    - Player matching checks    - Exit message checks    - who checks    - Player say checks    - Player emote checks- light/dark code  - add for room  - add check mods for special vision- indoor/outdoor code  - comfort mod- tabletalk  - permission checks, move verb to room/furniture- combat system  - re-vamp weapons    - each weapon has a weapon.attacks property, which lists various types of attacks (slash, chop, thrust)    - each attack actually has the mods on it, which are combined with the weapon mods, for the final attack mods    - the message sets are defined for attacks on the attack message set, and for the weapon (parrys) on the weapon message set  - re-vamp player stat properties  - re-vamp combat core verbs, remove/rename to:    >room:do_attack(type,attacker,target,weapon,*body_area)     >room:can_attack(type,attacker,target,weapon,*body_area)      >room:resolve_attack(type,target,weapon,*body_area)       >room:recieve_damage(type,attacker,target,weapon,damage,damage type,*body_area)  - attack types    - magical (may be combined)    - bladed    - blunt    - brawl    - natural    - ranged  - damage types    - heat    - cold    - poison    - puncture    - cut    - chop    - impact- effects system  - general object effects  - character effects- resource system  - $ecology object    - tracking/revitalizing of coordinates  - reaping/farming FO- NPC code  - sales/purchasing reactor    - $economy object      - tracking of supply/demand  - conversation reactor    - $rumors object      - tracking of current rumors/scuttlebutt    - individual conversation topics  - peasant reactor    - fear    - random event processing  - creature reactor    - fear    - comfort (comfortable terrain, comfortable area)- karma/reputation  - general player properties/verbs    >player:get_reputaton(*area)     >player:mod_reputation(mod,*area)    >player:get_karma     >player:mod_karma(mod,reason)  - karma modification types    - killing    - questing    - assistance    - magical- object spatialization  - object size  - object consistency    - metal    - wood    - stone    - flesh    - hide  - object quality  - object damage- vehicle code- statistics* - re-set player ability statistics  - create core verbs:*   >player:get_stat(stat)    >room:get_mods(player,stat,*type,*damage type)*   >player:resolve_roll({stat1,stat2},mod,diff,*boosted)*    >player:might_boost_stat(stat)  - plug into combat system- death code  - create/modify core verbs    >player:die(damage, damage type)     >player:death_effect(damage, damage type)  - create properties    player.soul- IC/OOC  - create core verbs    >player:OOC     >player:go_ooc      >room:drop_copy(player)    >player:IC     >player:go_ic      >room:destroy_copy(player)  - create copy code    - create copy generic- global task scheduler- $weather object  - figure out some way to easily create realistic weather patterns, based on seasonal changes- language FOs- chargen