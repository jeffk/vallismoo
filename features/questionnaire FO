{{{"typeofquestion","question","options"},answers}}@create-surveyif (!$rpg:trusted(player))  return("You can't do that.");endifplayer:tell("What's the name of this questionnaire?");name = $command_utils:read("the name");for thingy in (this.storehouse.contents)  if (thingy.name == name)    player:tell("You can't name it that.");    return(0);  endifendforobject = $recycler:_create(#11478,player);object:moveto(this.storehouse);$building_utils:set_names(object, name);object.title = name;player:tell("Ok, here we are folks, here are the instructions.  Each question will be listed in order on the questionnaire.");counter = 1;type = 0;while (type != "quit")  player:tell("Type of question: 'multiple choice', 'yes or no', 'true or false', or 'essay'.  ('quit' to quit)");  type = $command_utils:read("the question type");  if (type == "multiple choice")    player:tell("Type question:");    question = $command_utils:read("the question");    player:tell("Type multiple answers, seperated by /'s.");    answers = $string_utils:explode($command_utils:Read("the answers"),"/");    object.questions = setadd(object.questions,{{type,question,answers},{}});    x = 0;    while (x != length(answers))      object.questions[counter][2] = {@object.questions[counter][2],0};      x = x + 1;    endwhile  elseif (type == "yes or no")    player:tell("Type question:");    question = $command_utils:read("the question");    object.questions = setadd(object.questions,{{type,question},{0,0}});  elseif (type == "true or false")    player:tell("Type question:");    question = $command_utils:read("the question");    object.questions = setadd(object.questions,{{type,question},{0,0}});  elseif (type == "essay")    player:tell("Type question:");    question = $command_utils:read("the question");    object.questions = setadd(object.questions,{{type,question},{}});  else    player:tell("Uuuuuuuuuuuuuuuuuuuh.  Ok.  Maybe next time.");  endif  counter = counter + 1;endwhileplayer:tell("Ok, whatever you set, it's set...");@take-surveyif (argstr == "")  questionnaires = {};  for questionnaire in (this.storehouse.contents)    questionnaires = {@questionnaires,questionnaire.title};  endfor  player:tell("Available questionnaires include: ",$string_utils:english_list(questionnaires));  player:tell("Type: @take-survey survey name  to take the questionnaire.");  return;endifquestionnaire = 0;for quest in (this.storehouse.contents)  if ($string_utils:match_string(quest.title,tostr(argstr,"*")) != 0)    questionnaire = quest;  endifendforif (questionnaire == 0)  player:tell("Can't match a survey by that name.  Type @take-survey for a list of questionnaires.");  return;endifif ($list_utils:count(player,questionnaire.players) >= 1)  player:tell("You've already taken that questionnaire!");  return;endifanswers = {};counter = 1;for question in (questionnaire.questions)  quest_stuff = question[1];  answer = 1;  if (quest_stuff[1] == "multiple choice")    player:tell("Question ",counter,":");    player:tell(quest_stuff[2]);    counter2 = 1;    for possible_answer in (quest_stuff[3])       player:tell("    ",counter2,". ",possible_answer);       counter2 = counter2 + 1;    endfor    while (answer != 0)       answer = 1;       answer = $command_utils:read("the answer number");       if (answer == "quit")         return(0);       elseif (answer == "");         player:tell("Uh, no?");       elseif ((tonum(answer) == 0) || (tonum(answer) > length(quest_stuff[3])))         player:tell("Uh, no?");       else         answers = {@answers, tonum(answer)};         answer = 0;       endif    endwhile  elseif(quest_stuff[1] == "yes or no")    player:tell("Question ",counter,":");    player:tell(quest_stuff[2]);    while (answer != 0)       answer = 0;       answer = $command_utils:read("yes or no");       if (answer == "quit")         return(0);       elseif (answer == "");         player:tell("Uh, no?");       elseif ((answer != "yes") && (answer != "no"))         player:tell("Uh, no?");       else         answers = {@answers, answer};         answer = 0;       endif    endwhile  elseif(quest_stuff[1] == "true or false")    player:tell("Question ",counter,":");    player:tell(quest_stuff[2]);    while (answer != 0)       answer = 0;       answer = $command_utils:read("true or false");       if (answer == "quit")         return(0);       elseif (answer == "");         player:tell("Uh, no?");       elseif ((answer != "true") && (answer != "false"))         player:tell("Uh, no?");       else         answers = {@answers, answer};         answer = 0;       endif    endwhile  elseif(quest_stuff[1] == "essay")    player:tell("Question ",counter,":");    player:tell(quest_stuff[2]);    while (answer != 0)       answer = 0;       answer = $command_utils:read_lines("the answer");       if (answer == {"quit"})         return(0);       elseif (answer == {""});         player:tell("Uh, no?");       else         answers = {@answers, answer};         answer = 0;       endif    endwhile  endif  counter = counter + 1;endforplayer:tell("Thank you for taking our little questionnaire!");if ((typeof(player.alt_info) != 4) && (player.alt_info != 0))  return;endifcounter = 1;for answer in (answers)  if (typeof(answer) == 0)    questionnaire.questions[counter][2][answer] = questionnaire.questions[counter][2][answer] + 1;  elseif(answer == "yes")    questionnaire.questions[counter][2][1] = questionnaire.questions[counter][2][1] + 1;  elseif(answer == "no")    questionnaire.questions[counter][2][2] = questionnaire.questions[counter][2][2] + 1;  elseif(answer == "true")    questionnaire.questions[counter][2][1] = questionnaire.questions[counter][2][1] + 1;  elseif(answer == "false")    questionnaire.questions[counter][2][2] = questionnaire.questions[counter][2][2] + 1;  else    len = length(questionnaire.questions[counter][2]);    questionnaire.questions[counter][2][len+1] = answer;  endif  counter = counter + 1;endforquestionnaire.players = setadd(questionnaire.players,player);@survey-statsif (argstr == "")  questionnaires = {};  for questionnaire in (this.storehouse.contents)    if ((questionnaire.owner == player)  || (player == this.owner))       questionnaires = {@questionnaires,questionnaire.title};    endif  endfor  player:tell("Available questionnaires include: ",$string_utils:english_list(questionnaires));  player:tell("Type: @quest-stats questionnaire name  to view the stats.");  return;endifquestionnaire = 0;for quest in (this.storehouse.contents)  if ($string_utils:match_string(quest.title,tostr(argstr,"*")) != 0)    if ((quest.owner == player)  || (player == this.owner))       questionnaire = quest;    endif  endifendforif (questionnaire == 0)  player:tell("Can't match a questionnaire by that name.  Type @quest-stats for a list of questionnaires.");  return;endifcounter1 = 1;for question in (questionnaire.questions)  quest_stats = question[1];  quest_answers = question[2];  if (quest_stats[1] == "multiple choice")    player:tell("Question ",counter1,":  ",quest_stats[2]);    total = 0;    for number in (quest_answers)      total = number + total;    endfor    counter2 = 1;    for answer in (quest_stats[3])      player:tell("  ",counter2,". ",$math_utils:to_percent(quest_answers[counter2],total),"% ",answer);      counter2 = counter2 + 1;    endfor  elseif(quest_stats[1] == "yes or no")    player:tell("Question ",counter1,":  ",quest_stats[2]);    total = 0;    for number in (quest_answers)      total = number + total;    endfor    player:tell("  Yes   ",$math_utils:to_percent(quest_answers[1],total),"%");    player:tell("  No    ",$math_utils:to_percent(quest_answers[2],total),"%");  elseif(quest_stats[1] == "true or false")    player:tell("Question ",counter1,":  ",quest_stats[2]);    total = 0;    for number in (quest_answers)      total = number + total;    endfor    player:tell("  True  ",$math_utils:to_percent(quest_answers[1],total),"%");    player:tell("  False ",$math_utils:to_percent(quest_answers[2],total),"%");  elseif(quest_stats[1] == "essay")    player:tell("Question ",counter1,":  ",quest_stats[2]);    for answer in (quest_answers)      player:tell_lines(answer);    endfor  endif  counter1 = counter1 + 1; endforplayer:Tell("Total surveyed: ",total);    "@take-survey""Type alone to get a list of available surveys, or thus:""@take-survey survey name""To take the survey.  You can only take the survey once, and your answers are untraceable.""@create-survey""To create a survey for public consumption.""@survey-stats survey name""To dump the statistics on your survey.    