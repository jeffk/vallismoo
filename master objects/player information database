db:names(player)if (typeof(args[1]) == STR)  name = $string_utils:match_player(args[1]);  if (name == $failed_match)    return($failed_match);  elseif (name == $ambiguous_match)    return($ambiguous_match);  elseif (name == $nothing)    return($nothing);  endif  if ($object_utils:has_property(tostr("this.",name)))    return(this.(args[1])[1]);  else    return(0);  endifelseif (typeof(args[1]) == OBJ)  if ($object_utils:has_property(tostr("this.",(args[1]))))    return(this.(args[1])[1]);  else    return(0);  endifendifreturn(0);db:show_player  if (!$rpg:trusted(player))  return tostr("Hey, watch it, bucko.");else  target = toobj(args[1]);  if ($object_utils:has_property(this,tostr(target)))    info = this.(tostr(target));    names = "";    for name in (info[1])      if (names == "")        names = tostr(name[1], " ", $time_utils:ddmmyy(name[2]));      else        names = tostr(names, ", ", name[1], " ", $time_utils:ddmmyy(name[2]));      endif    endfor    return tostr("Names Used  : ", names);  endif  return("Names Used  : No records for player.");endifdb:tracking(player)db:watch_players()for plyr in (connected_players())  pname = tostr(plyr);  if ($object_utils:has_property(this,pname) == 0)    result = add_property(this,pname,{{{plyr.name,time()}},{},0},{this.owner,"r"});  else    switch = 0;    for name in (this.(pname)[1])      if (name[1] == plyr.name)        switch = 1;      endif    endfor    if (switch == 0)      this.(pname)[1] = {@this.(pname)[1],{plyr.name,time()}};    endif  endifendfordb:player_disconnect(player)plyr = args[1];if ($object_utils:has_property(this,tostr(plyr)))  this.(tostr(plyr))[3] = this.(tostr(plyr))[3] + (time() - plyr.last_connect_time);endifdb.objnum {{{name,time},{name,time}},{players tracked},total_secs_connected}