rooms-----time description (day/evening/night/morning)season description (spring/summer/fall/winter)weather effects (rain/wind/snow/thunder/light rain/clear/clouds/foggy)room:description---------------------------"Just make sure :description always returns a list, eh wot?";desc = this:get_description();weather = this:Get_weather();if (desc == {})  mesg = weather;elseif (weather == {})  mesg = desc;else  if ((length(desc) > 1) || (length(weather) >1))     mesg = {@desc, @weather};  else     mesg = {tostr(@desc, this:integration_separation_msg(), @weather)};  endifendifreturn typeof(mesg) == LIST ? mesg | {mesg};room:get_description--------------------season = $weather:get_season($zone);time = $weather:get_time($zone);msg = tostr(time,"_",season,"_msg");msg = this.(msg);sea = {};desc = {};if ((msg != "") && (msg != {}))  if (typeof(msg) == LIST)     sea = msg;  else     sea = {msg};  endifelse  msg = tostr(season,"_msg");  msg = this.(msg);  if ((msg != "") && (msg != {}))    if (typeof(msg) == LIST)       sea = msg;    else       sea = {msg};    endif  endifendifmsg = this.description;if ((msg != "") && (msg != {}))  if (typeof(msg) == LIST)     desc = msg;  else     desc = {msg};  endifendifif (sea != {})  return(sea);else  return(desc);endifroom:get_weather----------------weather = $weather:get_weather($zone);time = $weather:get_time($zone);msg = tostr(time,"_",weather,"_msg");msg = this.(msg);wea = {};if ((msg != "") && (msg != {}))  if (typeof(msg) == LIST)     wea = msg;  else     wea = {msg};  endifelse  msg = tostr(weather,"_msg");  msg = this.(msg);  if ((msg != "") && (msg != {}))    if (typeof(msg) == LIST)       wea = msg;    else       wea = {msg};    endif  endifendifif (wea != {})  return(wea);else  return({});endif@property #295.clear_msg "" rc me@property #295.rain_msg "" rc me@property #295.fog_msg "" rc me@property #295.snow_msg "" rc me@property #295.clouds_msg "" rc me@property #295.morning_clear_msg "" rc me@property #295.morning_rain_msg "" rc me@property #295.morning_fog_msg "" rc me@property #295.morning_snow_msg "" rc me@property #295.morning_clouds_msg "" rc me@property #295.day_clear_msg "" rc me@property #295.day_rain_msg "" rc me@property #295.day_fog_msg "" rc me@property #295.day_snow_msg "" rc me@property #295.day_clouds_msg "" rc me@property #295.evening_clear_msg "" rc me@property #295.evening_rain_msg "" rc me@property #295.evening_fog_msg "" rc me@property #295.evening_snow_msg "" rc me@property #295.evening_clouds_msg "" rc me@property #295.night_clear_msg "" rc me@property #295.night_rain_msg "" rc me@property #295.night_fog_msg "" rc me@property #295.night_snow_msg "" rc me@property #295.night_clouds_msg "" rc me@property #295.morning_spring_msg "" rc me@property #295.morning_summer_msg "" rc me@property #295.morning_fall_msg "" rc me@property #295.morning_winter_msg "" rc me@property #295.day_spring_msg "" rc me@property #295.day_summer_msg "" rc me@property #295.day_fall_msg "" rc me@property #295.day_winter_msg "" rc me@property #295.evening_spring_msg "" rc me@property #295.evening_summer_msg "" rc me@property #295.evening_fall_msg "" rc me@property #295.evening_winter_msg "" rc me@property #295.night_spring_msg "" rc me@property #295.night_summer_msg "" rc me@property #295.night_fall_msg "" rc me@property #295.night_winter_msg "" rc meroom:initiate_resources();-----------------------final = {};for entry in (this.master_resources)  resource = entry[1];  percent = entry[2];  max = entry[3];  if (percent > random(100))    ttl = random(max);    if (ttl > 0)      final = {@final,{resource,ttl}};    endif  endifendforthis.resources = final;room:get_resources("resourcetype")------------------for entry in (this.resources)  if (args[1] == entry[1])    return(entry[2]);  endifendforreturn(0);@property #295.master_resources {} rc me{{"resource",percentage probability,max}}@property #295.resources {} r me{{"resource",contents}}